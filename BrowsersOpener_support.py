#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    Jul 14, 2022 11:51:08 AM +03  platform: Windows NT
import configparser

profiles_data = configparser.ConfigParser()
profiles_data.read('profiles_data.ini')

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import BrowsersOpener

root = tk.Tk()
create_group_count = tk.StringVar()
create_group_name = tk.StringVar()
alarm_label_text = tk.StringVar()
type_of_browser = tk.StringVar()
groups_of_browser = tk.StringVar()
link_open = tk.StringVar()
type_of_browser.set('Chrome')
BrowsersOpener.get_browser_info()
link_open.set(profiles_data[BrowsersOpener.browser_type]['last_link'])
extension_input = tk.StringVar()

def main(*args):
    '''Main entry point for the application.'''
    global root
    global create_group_count
    global create_group_name
    global alarm_label_text
    global type_of_browser
    global groups_of_browser
    global link_open
    global extension_input

    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = BrowsersOpener.Toplevel1(_top1)
    # Creates a toplevel widget.
    # Creates a toplevel widget.
    # Creates a toplevel widget.
    # Creates a toplevel widget.
    BrowsersOpener.update_group_spinbox()
    root.mainloop()


def print(*args):
    print('BrowsersOpener_support.print')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

if __name__ == '__main__':
    BrowsersOpener.start_up()





